#Capstone Config
version: 2.1

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  lint-app:
    executor: python
    steps:
      - checkout
      - run:
          name: Install dependencies and Lint app
          command: |
            sudo apt-get update
            sudo apt-get install python3-venv
            python3 -m venv virtualenv
            . virtualenv/bin/activate
            make install
             # Install hadolint
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v2.6.1/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint
            
            pip install pylint
            make lint
            
            # Install eksctl
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
  build:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Build, tag and push docker image to docker.io
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PWD}
            docker build -t sharadyadav28/sharadcapstone:${CIRCLE_WORKFLOW_ID:0:7} .
            docker push sharadyadav28/sharadcapstone:${CIRCLE_WORKFLOW_ID:0:7}
            docker tag sharadyadav28/sharadcapstone:${CIRCLE_WORKFLOW_ID:0:7} sharadyadav28/sharadcapstone:latest
            docker push sharadyadav28/sharadcapstone:latest
  
  create-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          sharadcapstone
        type: string
        
    steps:
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      
      - aws-eks/create-cluster:
          cluster-name: sharadcapstone
          aws-region: us-east-1
          
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          sharadcapstone
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: us-east-1 
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: CloudFormation/appdeployment.yml
          resource-name: deployment/sharadcapstone

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          sharadcapstone
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: us-east-1 
      - run:
          name: Test cluster
          command: |
            kubectl get svc
            kubectl get nodes
            kubectl get deployment
                      
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@1.3
  cli: circleci/circleci-cli@0.1.2
  
workflows:
  deployment:
    jobs:
      - lint-app
      - build:
          requires:
            - "lint-app"
      - create-cluster:
          cluster-name: sharadcapstone
          requires:
            - build            
      - create-deployment:
          cluster-name: sharadcapstone
          requires:
            - create-cluster
      - aws-eks/update-container-image:
          cluster-name: sharadcapstone
          aws-region: us-east-1 
          container-image-updates: sharadcapstone1=sharadyadav28/sharadcapstone
          post-steps:
              - kubernetes/delete-resource:
                  resource-names: sharadcapstone
                  resource-types: deployment
                  wait: true
          record: true
          requires:
              - create-deployment
          resource-name: deployment/sharadcapstone
      - test-cluster:
          cluster-name: sharadcapstone
          requires:
            - aws-eks/update-container-image
      - aws-eks/delete-cluster:
          cluster-name: sharadcapstone
          aws-region: us-east-1 
          requires:
            - test-cluster
